{
  "magic": "E!vIA5L86J2I",
  "timestamp": "2024-11-26T01:45:39.754538+00:00",
  "repo": "selfissued/draft-jones-oauth-rfc7523bis",
  "labels": [
    {
      "name": "bug",
      "description": "Something isn't working",
      "color": "d73a4a"
    },
    {
      "name": "documentation",
      "description": "Improvements or additions to documentation",
      "color": "0075ca"
    },
    {
      "name": "duplicate",
      "description": "This issue or pull request already exists",
      "color": "cfd3d7"
    },
    {
      "name": "enhancement",
      "description": "New feature or request",
      "color": "a2eeef"
    },
    {
      "name": "good first issue",
      "description": "Good for newcomers",
      "color": "7057ff"
    },
    {
      "name": "help wanted",
      "description": "Extra attention is needed",
      "color": "008672"
    },
    {
      "name": "invalid",
      "description": "This doesn't seem right",
      "color": "e4e669"
    },
    {
      "name": "question",
      "description": "Further information is requested",
      "color": "d876e3"
    },
    {
      "name": "wontfix",
      "description": "This will not be worked on",
      "color": "ffffff"
    }
  ],
  "issues": [],
  "pulls": [
    {
      "number": 1,
      "id": "PR_kwDONPDDUs6CHHte",
      "title": "Use AS issuer identifier as the sole audience value",
      "url": "https://github.com/selfissued/draft-jones-oauth-rfc7523bis/pull/1",
      "state": "MERGED",
      "author": "selfissued",
      "authorAssociation": "OWNER",
      "assignees": [],
      "labels": [],
      "body": "This is the primary change for RFC 7523 bis",
      "createdAt": "2024-11-16T02:10:52Z",
      "updatedAt": "2024-11-20T20:00:14Z",
      "baseRepository": "selfissued/draft-jones-oauth-rfc7523bis",
      "baseRefName": "main",
      "baseRefOid": "99afb90b99dc0559c7880cb4c52d9af6f47da46c",
      "headRepository": "selfissued/draft-jones-oauth-rfc7523bis",
      "headRefName": "mbj-tighten-audience",
      "headRefOid": "eb709bcd67a770422256c2669ba9ec961272f050",
      "closedAt": "2024-11-20T20:00:14Z",
      "mergedAt": "2024-11-20T20:00:14Z",
      "mergedBy": "selfissued",
      "mergeCommit": {
        "oid": "bb89931cbb41ccd1891aba73162c9b9dc6d26def"
      },
      "comments": [
        {
          "author": "panva",
          "authorAssociation": "NONE",
          "body": "@aaronpk - double checking, did we discuss the audience of `urn:ietf:params:oauth:grant-type:jwt-bearer` being left the way it is or not? This PR updates the audience of both (`urn:ietf:params:oauth:grant-type:jwt-bearer`, and `urn:ietf:params:oauth:client-assertion-type:jwt-bearer`)...\r\n\r\nI remember we did want to address the use case for the authorization grant in issuer-less environments.",
          "createdAt": "2024-11-19T12:17:15Z",
          "updatedAt": "2024-11-19T12:23:49Z"
        },
        {
          "author": "selfissued",
          "authorAssociation": "OWNER",
          "body": "When I looked at the draft, I would have had to do fairly unnatural things to the text to not keep the audiences for the two cases aligned.  Having them different would also raise significant questions about why we're changing one and not the other and if so, whether any change is necessary at all.  I'm also not convinced that the attack isn't possible for the authorization grant case with the old audience language.",
          "createdAt": "2024-11-19T16:53:11Z",
          "updatedAt": "2024-11-19T16:53:11Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDONPDDUs6Rgu2k",
          "commit": {
            "abbreviatedOid": "4a2218d"
          },
          "author": "RalphBragg",
          "authorAssociation": "NONE",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-11-18T00:01:15Z",
          "updatedAt": "2024-11-18T00:04:50Z",
          "comments": [
            {
              "originalPosition": 31,
              "body": "Given this is going to be a breaking change, can i recommend that we remove the support for both  a string and array with a single string in it. For simplicity (which is its own security) and compute cycles and implementation cmplexity by both AS as and RPs wouldn't it make more sense to drop the ARRAY support with a single value in it, for just supporting and requiring a single string. my 2p",
              "createdAt": "2024-11-18T00:01:15Z",
              "updatedAt": "2024-11-18T00:04:50Z"
            },
            {
              "originalPosition": 91,
              "body": "Wouldn't oidc federation be a valid mechanism in this context as well",
              "createdAt": "2024-11-18T00:04:45Z",
              "updatedAt": "2024-11-18T00:04:50Z"
            }
          ]
        },
        {
          "id": "PRR_kwDONPDDUs6R9dF-",
          "commit": {
            "abbreviatedOid": "eb709bc"
          },
          "author": "aaronpk",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-11-20T14:35:38Z",
          "updatedAt": "2024-11-20T14:35:38Z",
          "comments": [
            {
              "originalPosition": 32,
              "body": "There are still valid uses of this specification when an authorization server doesn't have an issuer identifier.",
              "createdAt": "2024-11-20T14:35:38Z",
              "updatedAt": "2024-11-20T14:35:39Z"
            }
          ]
        },
        {
          "id": "PRR_kwDONPDDUs6SAZdH",
          "commit": {
            "abbreviatedOid": "af974a2"
          },
          "author": "selfissued",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-11-20T19:59:39Z",
          "updatedAt": "2024-11-20T19:59:39Z",
          "comments": [
            {
              "originalPosition": 32,
              "body": "Deployments not needing the security fix need make no changes.  They can continue using RFC 7523 as is.\r\n\r\nWe should aim to be very clear in our public description of the problem when deployments do and do not require updates.",
              "createdAt": "2024-11-20T19:59:39Z",
              "updatedAt": "2024-11-20T19:59:39Z"
            }
          ]
        }
      ]
    },
    {
      "number": 2,
      "id": "PR_kwDONPDDUs6CI2fP",
      "title": "Explicitly type JWTs",
      "url": "https://github.com/selfissued/draft-jones-oauth-rfc7523bis/pull/2",
      "state": "MERGED",
      "author": "selfissued",
      "authorAssociation": "OWNER",
      "assignees": [],
      "labels": [],
      "body": "As suggested by @panva",
      "createdAt": "2024-11-16T20:22:00Z",
      "updatedAt": "2024-11-20T20:05:56Z",
      "baseRepository": "selfissued/draft-jones-oauth-rfc7523bis",
      "baseRefName": "main",
      "baseRefOid": "bb89931cbb41ccd1891aba73162c9b9dc6d26def",
      "headRepository": "selfissued/draft-jones-oauth-rfc7523bis",
      "headRefName": "mbj-explicit-typing",
      "headRefOid": "5b124d7b4920763556aacd65287f531d56b3cf17",
      "closedAt": "2024-11-20T20:05:56Z",
      "mergedAt": "2024-11-20T20:05:56Z",
      "mergedBy": "selfissued",
      "mergeCommit": {
        "oid": "28c114cf220e1de0857add51a00b52d96ca531e3"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 3,
      "id": "PR_kwDONPDDUs6CI6Ev",
      "title": "Update audience requirements in other RFCs",
      "url": "https://github.com/selfissued/draft-jones-oauth-rfc7523bis/pull/3",
      "state": "MERGED",
      "author": "selfissued",
      "authorAssociation": "OWNER",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2024-11-16T21:20:00Z",
      "updatedAt": "2024-11-20T20:11:17Z",
      "baseRepository": "selfissued/draft-jones-oauth-rfc7523bis",
      "baseRefName": "main",
      "baseRefOid": "28c114cf220e1de0857add51a00b52d96ca531e3",
      "headRepository": "selfissued/draft-jones-oauth-rfc7523bis",
      "headRefName": "mbj-update-other-specs",
      "headRefOid": "303e3163084fc6fa0b1ee4d16f5afd9b054c8f49",
      "closedAt": "2024-11-20T20:11:16Z",
      "mergedAt": "2024-11-20T20:11:16Z",
      "mergedBy": "selfissued",
      "mergeCommit": {
        "oid": "df4c646adc45e12e75a0c35106fbd250a84dcace"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 4,
      "id": "PR_kwDONPDDUs6C3fhL",
      "title": "add option for extensions to define their own explicit jwt type",
      "url": "https://github.com/selfissued/draft-jones-oauth-rfc7523bis/pull/4",
      "state": "MERGED",
      "author": "aaronpk",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "See [Identity Assertion Authorization Grant](https://datatracker.ietf.org/doc/draft-parecki-oauth-identity-assertion-authz-grant/) for an example of an extension that defines its own JWT type for the authorization grant defined in the extension.",
      "createdAt": "2024-11-22T20:54:08Z",
      "updatedAt": "2024-11-26T01:23:11Z",
      "baseRepository": "selfissued/draft-jones-oauth-rfc7523bis",
      "baseRefName": "main",
      "baseRefOid": "910ddf124c5f66d9e89ce5e6593231491b28c436",
      "headRepository": "aaronpk/draft-jones-oauth-rfc7523bis",
      "headRefName": "main",
      "headRefOid": "cf723df8cab450a20543f927f797760f3ae1d13e",
      "closedAt": "2024-11-26T01:23:11Z",
      "mergedAt": "2024-11-26T01:23:11Z",
      "mergedBy": "selfissued",
      "mergeCommit": {
        "oid": "576440e17d5dabc95a063247f5404a9990b2abf3"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDONPDDUs6SYDue",
          "commit": {
            "abbreviatedOid": "624b61a"
          },
          "author": "selfissued",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-11-22T21:42:18Z",
          "updatedAt": "2024-11-22T21:42:18Z",
          "comments": [
            {
              "originalPosition": 7,
              "body": "```suggestion\r\n\t  another more specific explicit type value defined by a specification profiling this specification.\r\n```\r\n\r\nI elaborated on what an \"extension-defined type\" is.",
              "createdAt": "2024-11-22T21:42:18Z",
              "updatedAt": "2024-11-25T23:12:45Z"
            }
          ]
        },
        {
          "id": "PRR_kwDONPDDUs6SYD45",
          "commit": {
            "abbreviatedOid": "624b61a"
          },
          "author": "selfissued",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-11-22T21:42:50Z",
          "updatedAt": "2024-11-22T21:42:50Z",
          "comments": [
            {
              "originalPosition": 19,
              "body": "```suggestion\r\n\t  another more specific explicit type value defined by a specification profiling this specification.\r\n```",
              "createdAt": "2024-11-22T21:42:50Z",
              "updatedAt": "2024-11-25T23:12:59Z"
            }
          ]
        },
        {
          "id": "PRR_kwDONPDDUs6Sn7nj",
          "commit": {
            "abbreviatedOid": "cf723df"
          },
          "author": "selfissued",
          "authorAssociation": "OWNER",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-11-26T01:21:35Z",
          "updatedAt": "2024-11-26T01:21:35Z",
          "comments": []
        }
      ]
    }
  ]
}